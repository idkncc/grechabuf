function e(e){return{size(t){let i=0;for(const[s,n]of Object.entries(e))i+=n.size(t,i);return i},serialize(t,i,s=0){const n=s;for(const[n,r]of Object.entries(e))s+=r.serialize(t,s,i[n]);return s-n},deserialize(t,i=0){let s={};for(const[n,r]of Object.entries(e)){const{data:e,length:a}=r.deserialize(t,i);s[n]=e,i+=a}return s}}}const t=()=>({size:(e,t)=>1,serialize:(e,t,i)=>(e.setInt8(t,i),1),deserialize:(e,t)=>({data:e.getInt8(t),length:1})}),i=()=>({size:(e,t)=>1,serialize:(e,t,i)=>(e.setUint8(t,i),1),deserialize:(e,t)=>({data:e.getUint8(t),length:1})}),s=()=>({size:(e,t)=>2,serialize:(e,t,i)=>(e.setInt16(t,i),2),deserialize:(e,t)=>({data:e.getInt16(t),length:2})}),n=()=>({size:(e,t)=>2,serialize:(e,t,i)=>(e.setUint16(t,i),2),deserialize:(e,t)=>({data:e.getUint16(t),length:2})}),r=()=>({size:(e,t)=>4,serialize:(e,t,i)=>(e.setInt32(t,i),4),deserialize:(e,t)=>({data:e.getInt32(t),length:4})}),a=()=>({size:(e,t)=>4,serialize:(e,t,i)=>(e.setUint32(t,i),4),deserialize:(e,t)=>({data:e.getUint32(t),length:4})}),l=()=>({size:(e,t=0)=>e?e.getUint8(t)+1:1,serialize(e,t,i){e.setUint8(t,i.length);const s=i.split("").map(((e,t)=>[t,i.charCodeAt(t)]));for(const[i,n]of s)e.setUint8(t+i+1,n);return i.length+1},deserialize(e,t){const i=e.getUint8(t);let s=[];for(let n=0;n<i;n++)s.push(e.getUint8(t+n+1));return{data:String.fromCodePoint(...s),length:i+1}}}),z=e=>({size:(t,i=0)=>t?e.size(t,i)+1:1,serialize(t,i,s){t.setUint8(i,s.length);let n=0;for(const r of s)n+=e.serialize(t,i+n+1,r);return n+1},deserialize(t,i){const s=t.getUint8(i);let n=[],r=0;for(let a=0;a<s;a++){const{data:s,length:a}=e.deserialize(t,i+r+1);n.push(s),r+=a}return{data:n,length:r}}});export{z as array,e as createStruct,s as i16,r as i32,t as i8,l as string,n as u16,a as u32,i as u8};
//# sourceMappingURL=grechabuf.min.mjs.map
